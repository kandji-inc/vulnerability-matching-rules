import argparse
import os

import orjson
import redis

VULN_RULES_LIST_KEY = "rules_list"
VULN_RULES_CHECK_KEY = "rules_commit"


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("rules_path")
    parser.add_argument("schema_path")
    args = parser.parse_args()

    redis_conn = redis.Redis(
        host=os.getenv("REDIS_WRITER_HOST"),
        port=os.getenv("REDIS_PORT"),
        decode_responses=True,
    )

    # load rules
    rules = []
    for subdir, dirs, files in os.walk(args.rules_path):
        for file in files:
            with open(os.path.join(subdir, file)) as f:
                rules.append(orjson.dumps(orjson.loads(f.read())))

    # save to redis
    pipe = redis_conn.pipeline(transaction=True)
    pipe.delete(VULN_RULES_LIST_KEY)
    for rule in rules:
        pipe.rpush(VULN_RULES_LIST_KEY, rule)
    pipe.set(VULN_RULES_CHECK_KEY, os.getenv("CF_REVISION_ENV"))
    pipe.execute()


if __name__ == "__main__":
    main()
